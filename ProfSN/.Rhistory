cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 4
indprof <- 4
curve(prof_indG,0.02,0.15 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
######################################################################################
# Bayesian estimation
######################################################################################
#==================================================================================================
# Bayesian Analysis
#==================================================================================================
#--------------------------------------------------------------------------------------------------
# Logistic ODE model for the hazard function: Analytic solution
#--------------------------------------------------------------------------------------------------
# Support
SupportG <- function(x) {   TRUE }
# Random initial points
X0G <- function(x) { OPTG$par + runif(4,-0.01,0.01) }
# twalk for analytic solution
set.seed(1234)
infoG <- Runtwalk( dim=4,  Tr=110000,  Obj=logpostG, Supp=SupportG,
x0=X0G(), xp0=X0G(),PlotLogPost = TRUE)
# Posterior sample after burn-in and thinning
ind=seq(10000,110000,100)
# Summaries of the posterior samples
summG <- apply(exp(infoG$output[ind,]),2,summary)
colnames(summG) <- c("lambda","kappa","h_0","sigma")
kable(summG, digits = 3)
# KDEs of the posterior samples
lambdap <- exp(infoG$output[,1][ind])
kappap <- exp(infoG$output[,2][ind])
N0p <- exp(infoG$output[,3][ind])
sigmap <- exp(infoG$output[,4][ind])
plot(density(lambdap), main = "", xlab = expression(lambda), ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, lwd = 2)
plot(density(kappap), main = "", xlab = expression(kappa), ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, lwd = 2)
plot(density(N0p), main = "", xlab = expression(N[0]), ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, lwd = 2)
plot(density(sigmap), main = "", xlab = expression(sigma), ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, lwd = 2)
# Creating the posterior envelopes
tvec <- seq(0,4,by = 0.01)
ntvec <- length(tvec)
# Logistic
NCIG <- matrix(0, ncol = ntvec, nrow = length(ind))
for(j in 1:length(ind)){
for(k in 1:ntvec){
NCIG[j,k ] <- gompertzode( tvec[k],lambdap[j], kappap[j], N0p[j])
}
}
NG <-  colMeans(NCIG)
NCIGL <- apply(NCIG, 2, ql)
NCIGU <- apply(NCIG, 2, qu)
# Quantile functions
ql <- function(p) quantile(p, 0.025)
qu <- function(p) quantile(p, 0.975)
NG <-  colMeans(NCIG)
NCIGL <- apply(NCIG, 2, ql)
NCIGU <- apply(NCIG, 2, qu)
# Gompertz
plot(tvec,  NG, type = "l", ylim = c(0,100), xlab = "Time", ylab = "Mass",
cex.axis = 1.5, cex.lab = 1.5, lwd =2, lty = 2)
points(tvec,  NCIGL, col = "gray", type = "l")
points(tvec,  NCIGU, col = "gray", type = "l")
polygon(c(tvec, rev(tvec)), c(NCIGL[order(tvec)], rev(NCIGU[order(tvec)])),
col = "gray", border = NA)
points(tvec,  NG,type = "l", col = "black", lwd = 2, lty =2)
points(time, mass, xlab = "time (years)", ylab = "mass",
cex.axis = 1.5, cex.lab = 1.5, pch = 19)
library(sn)
attach(frontier)
data(frontier, package="sn")
fit <- selm(frontier ~ 1)
plot(fit, which=2)
#
fit.p <- selm(frontier ~ 1, method="MPLE")
plot(fit.p, which=2)
fit.p
fit
?dsn
# negative log-likelihood function
loglikSN <- function(par){
mu <- exp(par[1])
sigma <- exp(par[2])
lambda <- par[3]
loglik <- sum( dsn( frontier, xi = mu, omega = sigma, alphalambda, log = TRUE) )
return(-loglik)
}
# Optimisation step
OPTSN <- nlminb(start = rep(0.1,3), objective = loglikG)
# Optimisation step
OPTSN <- nlminb(start = rep(0.1,3), objective = loglikSN)
# negative log-likelihood function
loglikSN <- function(par){
mu <- exp(par[1])
sigma <- exp(par[2])
lambda <- par[3]
loglik <- sum( dsn( frontier, xi = mu, omega = sigma, alpha =lambda, log = TRUE) )
return(-loglik)
}
# Optimisation step
OPTSN <- nlminb(start = rep(0.1,3), objective = loglikSN)
OPTSN
# Optimisation step
OPTSN <- nlminb(start = rep(1,3), objective = loglikSN)
OPTSN
# Maximum likelihood estimate
MLESN <- c(exp(OPTSN$par[1:2]),OPTSN$par[3])
MLESN
# Optimisation step
OPTSN <- nlminb(start = c(-10,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(exp(OPTSN$par[1:2]),OPTSN$par[3])
MLESN
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 50, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN(), -1,4, add=TRUE, lwd = 2, col = "blue")
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
setwd("/Users/FJRubio/Dropbox/Curiosities/ProfSN")
library(sn)
library(knitr)
source("routines.R")
attach(frontier)
frontier
data(frontier)
print(frontier)
kable(frontier)
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
######################################################################################
# Maximum likelihood estimation
######################################################################################
# Optimisation step
OPTSN <- nlminb(start = c(-10,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(exp(OPTSN$par[1:2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihood of Parameter 1
indprof <- 1
MLE
MLESN
curve(prof_indSN,-1,1 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
prof_indSN <- Vectorize(function(par) prof.likL(log(par),indprof))
# negative log-likelihood function
loglikSN <- function(par){
mu <- exp(par[1])
sigma <- exp(par[2])
lambda <- par[3]
loglik <- sum( dsn( frontier, xi = mu, omega = sigma, alpha =lambda, log = TRUE) )
return(-loglik)
}
# Profile likelihood function for parameter "ind"
prof.likSN <- function(par1, ind){
tempf <- function(par){
tempv <- rep(0,p)
tempv <- replace(x = tempv, c(1:p)[-ind] , par)
tempv <- replace(x = tempv, ind , par1)
out0 <- loglikSN(tempv)
return(out0)
}
out <-  -nlminb(OPTSN$par[-ind],tempf, control = list(iter.max = 10000))$objective + ML
return(exp(out))
}
prof_indSN <- Vectorize(function(par) prof.likLSN(log(par),indprof))
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-1,1 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# negative log-likelihood function
loglikSN <- function(par){
mu <- exp(par[1])
sigma <- exp(par[2])
lambda <- par[3]
loglik <- sum( dsn( frontier, xi = mu, omega = sigma, alpha =lambda, log = TRUE) )
return(-loglik)
}
# Profile likelihood function for parameter "ind"
prof.likSN <- function(par1, ind){
tempf <- function(par){
tempv <- rep(0,p)
tempv <- replace(x = tempv, c(1:p)[-ind] , par)
tempv <- replace(x = tempv, ind , par1)
out0 <- loglikSN(tempv)
return(out0)
}
out <-  -nlminb(OPTSN$par[-ind],tempf, control = list(iter.max = 10000))$objective + ML
return(exp(out))
}
prof_indSN <- Vectorize(function(par) prof.likSN(log(par),indprof))
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-1,1 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
ML
p
prof_indSN(0)
prof_indSN(0.1)
prof_indSN(0.2)
prof_indSN(0.3)
prof_indSN(-0.3)
prof_indSN(-0.1)
prof_indSN(-0.01)
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
######################################################################################
# Maximum likelihood estimation
######################################################################################
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-1,1 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
prof_indSN <- Vectorize(function(par) prof.likSN(par,indprof))
prof_indlSN <- Vectorize(function(par) prof.likSN(log(par),indprof))
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-1,1 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
MLESN
curve(prof_indSN,-1,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,-0.4,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 2
indprof <- 2
curve(prof_indlSN,0.5,1.5 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indlSN,0.75,2 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 1
indprof <- 3
curve(prof_indSN,0, 100 , n = 200, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000 , n = 200, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 100000 , n = 200, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000000 , n = 200, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
mle
MLESE
MLESN
curve(prof_indSN,0, 10000000 , n = 200, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 10000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 100000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 10000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
?frontier
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
######################################################################################
# Maximum likelihood estimation
######################################################################################
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-0.4,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 2
indprof <- 2
curve(prof_indlSN,0.75,2 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 1
indprof <- 3
curve(prof_indSN,0, 1000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
######################################################################################
# Maximum likelihood estimation
######################################################################################
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-0.4,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 2
indprof <- 2
curve(prof_indlSN,0.75,2 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 1
indprof <- 3
curve(prof_indSN,0, 1000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-0.4,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 2
indprof <- 2
curve(prof_indlSN,0.75,2 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 1
indprof <- 3
curve(prof_indSN,0, 1000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
######################################################################################
# Maximum likelihood estimation
######################################################################################
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
##################################################################################################
# Profile likelihood of the parameters
##################################################################################################
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihoods
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-0.4,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 2
indprof <- 2
curve(prof_indlSN,0.75,2 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 1
indprof <- 3
curve(prof_indSN,0, 1000000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000000 , n = 100, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000000 , n = 50, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000000 , n = 75, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 1000000 , n = 250, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 100000 , n = 250, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 10000
cex.axis = 1.5, cex.lab = 1.5)
curve(prof_indSN,0, 100000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
library(sn)
library(knitr)
source("routines.R")
data(frontier)
print(frontier)
######################################################################################
# Maximum likelihood estimation
######################################################################################
# Optimisation step
OPTSN <- nlminb(start = c(0,0,3), objective = loglikSN)
# Maximum likelihood estimate
MLESN <- c(OPTSN$par[1],exp(OPTSN$par[2]),OPTSN$par[3])
kable(MLESN)
# Fitted SN
fitSN <- Vectorize(function(t) dsn(t, xi = MLESN[1], omega  = MLESN[2], alpha = MLESN[3], log = FALSE))
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
##################################################################################################
# Profile likelihood of the parameters
##################################################################################################
# Required quantities
# Number of parameters
p <- 3
# (minus) Maximum value of the log-likelihood
ML <- OPTSN$objective
# Profile likelihoods
# Profile likelihood of Parameter 1
indprof <- 1
curve(prof_indSN,-0.4,0 , n = 200, lwd = 2, xlab = expression(mu), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 2
indprof <- 2
curve(prof_indlSN,0.75,2 , n = 200, lwd = 2, xlab = expression(sigma), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
# Profile likelihood of Parameter 1
indprof <- 3
curve(prof_indSN,0, 100000 , n = 1000, lwd = 2, xlab = expression(lambda), ylab = "Profile Likelihood",
cex.axis = 1.5, cex.lab = 1.5)
hist(frontier, probability = TRUE, breaks = 10, xlab = "x", ylab = "Density",
cex.axis = 1.5, cex.lab = 1.5, pch =19)
curve(fitSN, -1,4, add=TRUE, lwd = 2, col = "blue")
box()
